name: Deploy Images to GHCR

env:
  IMAGE_NAME: ghcr.io/justereseau/sonarr

on:
  schedule:
    - cron: '45 6 * * *'
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.github/**'

jobs:
  push-store-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        channel:
          - v4-preview
          - v3-stable
          - v2-stable
    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@main

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Read latest release
        id: get_latest_release
        run: echo "RELEASE_DATA=$(curl -s https://services.sonarr.tv/v1/releases | jq -c ."\"${{ matrix.channel }}\"")" >> "$GITHUB_ENV"
        shell: bash

      # Extract data from the JSON response
      - name: Extract data from JSON response
        id: extract_data
        run: |
          echo "release=$(echo $RELEASE_DATA | jq -r '.version')" >> "$GITHUB_OUTPUT"
          echo "download_url=$(echo $RELEASE_DATA | jq -r '.linux.manual.url')" >> "$GITHUB_OUTPUT"
          echo "download_hash=$(echo $RELEASE_DATA | jq -r '.linux.manual.hash')" >> "$GITHUB_OUTPUT"
        shell: bash

      - name: Print values for testing
        run: |
          echo "release: ${{ steps.extract_data.outputs.release }}"
          echo "download_url: ${{ steps.extract_data.outputs.download_url }}"
          echo "download_hash: ${{ steps.extract_data.outputs.download_hash }}"
        shell: bash

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          build-args: |
            RELEASE_TAG=${{ steps.get_latest_release.outputs.release }}
            DOWNLOAD_URL=${{ steps.get_latest_release.outputs.download_url }}
            DOWNLOAD_HASH=${{ steps.get_latest_release.outputs.download_hash }}
          tags: ${{ env.IMAGE_NAME }}:latest,${{ env.IMAGE_NAME }}:${{ steps.get_latest_release.outputs.release }}
